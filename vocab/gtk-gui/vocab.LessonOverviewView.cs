
// This file has been generated by the GUI designer. Do not modify.
namespace vocab
{
	public partial class LessonOverviewView
	{
		private global::Gtk.UIManager UIManager;

		private global::Gtk.Action addAction;

		private global::Gtk.Action removeAction;

		private global::Gtk.Action editAction;

		private global::Gtk.Action mediaPlayAction;

		private global::Gtk.VBox vbox3;

		private global::Gtk.Toolbar toolbar3;

		private global::Gtk.ScrolledWindow GtkScrolledWindow;

		private global::Gtk.NodeView nodeview3;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget vocab.LessonOverviewView
			Stetic.BinContainer w1 = global::Stetic.BinContainer.Attach (this);
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w2 = new global::Gtk.ActionGroup ("Default");
			this.addAction = new global::Gtk.Action ("addAction", null, null, "gtk-add");
			this.addAction.IsImportant = true;
			w2.Add (this.addAction, null);
			this.removeAction = new global::Gtk.Action ("removeAction", global::Mono.Unix.Catalog.GetString ("_Remove"), null, "gtk-remove");
			this.removeAction.IsImportant = true;
			this.removeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Remove");
			w2.Add (this.removeAction, null);
			this.editAction = new global::Gtk.Action ("editAction", null, null, "gtk-edit");
			this.editAction.IsImportant = true;
			w2.Add (this.editAction, null);
			this.mediaPlayAction = new global::Gtk.Action ("mediaPlayAction", null, null, "gtk-media-play");
			this.mediaPlayAction.IsImportant = true;
			w2.Add (this.mediaPlayAction, null);
			this.UIManager.InsertActionGroup (w2, 0);
			this.Name = "vocab.LessonOverviewView";
			// Container child vocab.LessonOverviewView.Gtk.Container+ContainerChild
			this.vbox3 = new global::Gtk.VBox ();
			this.vbox3.Name = "vbox3";
			this.vbox3.Spacing = 6;
			// Container child vbox3.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><toolbar name='toolbar3'><toolitem name='editAction' action='editAction'/><toolitem name='addAction' action='addAction'/><toolitem name='removeAction' action='removeAction'/><toolitem name='mediaPlayAction' action='mediaPlayAction'/></toolbar></ui>");
			this.toolbar3 = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolbar3")));
			this.toolbar3.Name = "toolbar3";
			this.toolbar3.ShowArrow = false;
			this.vbox3.Add (this.toolbar3);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.toolbar3]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.nodeview3 = new global::Gtk.NodeView ();
			this.nodeview3.CanFocus = true;
			this.nodeview3.Events = ((global::Gdk.EventMask)(256));
			this.nodeview3.Name = "nodeview3";
			this.nodeview3.Reorderable = true;
			this.nodeview3.RulesHint = true;
			this.nodeview3.SearchColumn = 0;
			this.GtkScrolledWindow.Add (this.nodeview3);
			this.vbox3.Add (this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.GtkScrolledWindow]));
			w5.Position = 1;
			this.Add (this.vbox3);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			w1.SetUiManager (UIManager);
			this.Hide ();
			this.addAction.Activated += new global::System.EventHandler (this.OnAddActionActivated);
			this.removeAction.Activated += new global::System.EventHandler (this.OnRemoveActionActivated);
			this.editAction.Activated += new global::System.EventHandler (this.OnEditActionActivated);
			this.mediaPlayAction.Activated += new global::System.EventHandler (this.OnMediaPlayActionActivated);
			this.nodeview3.RowActivated += new global::Gtk.RowActivatedHandler (this.OnNodeview3RowActivated);
			this.nodeview3.CursorChanged += new global::System.EventHandler (this.OnNodeview3CursorChanged);
		}
	}
}
